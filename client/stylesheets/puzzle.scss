@import "theme";

////////////
// Puzzle page styles

$puzzle-page-padding: 8px;

.puzzle-page {
  .Pane > * {
    position: absolute;
    top: 0;
    bottom: 0;
    left: 0;
    right: 0;
  }

  &.narrow {
    display: flex;
    flex-direction: column;
  }
}

.chatter-section {
  flex: 0;
  background-color: #ebd0e3;
  font-size: 12px;
  line-height: 12px;
  padding: $puzzle-page-padding;

  .av-actions {
    display: flex;
    flex-direction: row;
    margin-bottom: $puzzle-page-padding;

    .btn {
      flex: 1;
      padding-right: 2px;
      padding-left: 2px;
      display: flex;
      align-items: center;
      justify-content: center;

      + .btn {
        margin-left: $puzzle-page-padding;
      }
    }
  }
}

.chatter-subsection {
  margin-top: 4px;

  header {
    margin: 4px 0;
    cursor: pointer;
  }

  .people-list {
    display: flex;
    flex-wrap: wrap;
    justify-content: flex-end;

    &:not(:empty) {
      margin: -4px -4px 0 0;
    }

    &.collapsed {
      display: none;
    }
  }

  .people-item {
    flex: 0 0 auto;
    width: 40px;
    height: 40px;
    background: white;
    cursor: default;
    display: flex;
    align-items: center;
    justify-content: center;
    position: relative;
    margin: 4px 4px 0 0;

    .icon {
      font-size: 12px;
      width: 16px;
      height: 16px;
      display: flex;
      align-items: center;
      justify-content: center;
      color: $danger;
      position: absolute;
      right: 0px;

      &.muted-icon {
        top: 0px;
      }

      &.deafened-icon {
        bottom: 0px;
      }
    }

    .discord-avatar {
      width: 100%;
      height: 100%;
    }

    .initial {
      z-index: 10;
      text-transform: uppercase;
      font-weight: bold;
      font-size: 24px;
      color: black;
      line-height: 24px;
    }

    &.live .initial {
      // white border around initial
      // aids readability if the spectrum graph is high
      text-shadow: -1px  1px 0 white,
                    1px  1px 0 white,
                    1px -1px 0 white,
                   -1px -1px 0 white;
    }
  }
}

.chatter-tooltip {
  // Force chatter tooltip overlay to get larger than the default
  // react-bootstrap stylesheet permits.  We can only apply classes to the root
  // tooltip <div>; the .tooltip-inner className is controlled by
  // react-bootstrap/popper.
  .tooltip-inner {
    max-width: 300px;
  }
}

// Puzzle metadata

.puzzle-metadata-row .tag-list {
  .tag-editor {
    flex-basis: 100%;
    margin: 2px 0;
  }
}

.SplitPane > .Pane.collapsing:before {
  content: "";
  display: block;
  height: 100%;
  width: 100%;
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background-color: rgba(255, 0, 0, .2);
  z-index: 2;
}

/* Throw an overlay over iFrames during drag to capture mouse events */
/* Works in Chrome and Safari but not Firefox for some reason*/
.SplitPane.dragging:after {
  content: '';
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  z-index: 2002;
}
/* Kludge that makes it work in Firefox.
   Amazingly, the above part actually works for iFrames outside of the SplitPane,
   so we're covered everywhere. */
.SplitPane.dragging:before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  z-index: 2003;
}

.SplitPane > .Resizer.horizontal.collapsedAdjacent {
  height: 17px;
  min-height: 17px;
  background-color: #666;
  position: relative;
  &:after {
    content: '';
    display: block;
    width: 0;
    height: 0;
    border-left: 6px solid transparent;
    border-right: 6px solid transparent;
    position: absolute;
    margin-left: -6px;
    left: 50%;
    top: 2px;
    z-index: 2;
  }
  &.collapsedPrevious:after {
    border-top: 4px solid white;
  }
  &.collapsedNext:after {
    border-bottom: 4px solid white;
  }
}

.SplitPane > .Resizer.vertical.collapsedAdjacent {
  width: 17px;
  min-width: 17px;
  background-color: #666;
  position: relative;
  &:after {
    content: '';
    display: block;
    width: 0;
    height: 0;
    border-top: 6px solid transparent;
    border-bottom: 6px solid transparent;
    position: absolute;
    margin-top: -6px;
    top: 50%;
    left: 2px;
    z-index: 2;
  }
  &.collapsedPrevious:after {
    border-left: 4px solid white;
  }
  &.collapsedNext:after {
    border-right: 4px solid white;
  }
}

.SplitPane.disabled > .Resizer {
  display: none;
}

.Resizer {
  background: $gray-600;
  z-index: 1;
  box-sizing: border-box;
  background-clip: padding-box;
  &:hover {
    transition: border 0.8s ease;
  }
}

.Resizer.horizontal {
  height: 11px;
  margin: -5px 0;
  border-top: 5px solid rgba(255, 255, 255, 0);
  border-bottom: 5px solid rgba(255, 255, 255, 0);
  cursor: row-resize;
  width: 100%;
  &:hover {
    border-top: 5px solid rgba(0, 0, 0, 0.1);
    border-bottom: 5px solid rgba(0, 0, 0, 0.1);
  }
}

.Resizer.vertical {
  width: 11px;
  margin: 0 -5px;
  border-left: 5px solid rgba(255, 255, 255, 0);
  border-right: 5px solid rgba(255, 255, 255, 0);
  cursor: col-resize;
  &:hover {
    border-left: 5px solid rgba(0, 0, 0, 0.1);
    border-right: 5px solid rgba(0, 0, 0, 0.1);
  }
}

/* Needed to keep the cursor during the drag
   Not really sure why the Resizer style doesn't work during the drag */
.SplitPane.dragging {
  cursor: move;
  &.horizontal {
    cursor: row-resize;
  }
  &.vertical {
    cursor: col-resize;
  }
}

Resizer.disabled {
  cursor: not-allowed;
  &:hover {
    border-color: transparent;
  }
}
